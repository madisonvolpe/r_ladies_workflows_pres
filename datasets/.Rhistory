Charges <- Charges %>%
arrange(codes)
names(Charges)[1] <- "Statute"
Charges$Statute_orginal <- Charges$Statute
Charges$Statute <- gsub("00$", "", Charges$Statute)
Charges$Statute <- gsub("0$", "", Charges$Statute)
Charges$Statute <- gsub("^0", "", Charges$Statute)
# read in scraped offenses
official_statues <-read.csv("MiamiOffenses.csv")
official_statues <- official_statues[-1]
# get rid of punctuation
official_statues$Statute<-gsub("[().-]","",official_statues$Statute)
# join charges from bookings data with official statues
Charges_Joined<- left_join(Charges, official_statues)
#More cleaning by Charge Code
Charges_Joined <- Charges_Joined %>%
mutate(CodeLength = nchar(Statute)) %>%
mutate(Zero_Consecutive = str_count(Statute, "000")) %>%
mutate(Zero_Consecutive_end = str_count(Statute, "0{2}(?=\\w{1,4}$)")) %>%
mutate(ChargeType = str_extract(Statute,"C$|D$|F$|I$|J$|L$|M$|N$|T$|X$|Z$|A$|G$|B$|H$"))
Charges_Joined <- Charges_Joined %>%
mutate(Statute = ifelse(Zero_Consecutive == 1 & is.na(Desc), gsub("(?<=0{1})0{2}", "", Statute, perl = T),
Statute))%>%
mutate(Statute = ifelse(Zero_Consecutive_end == 2 & is.na(Desc), gsub("0{2}(?=\\w{1}$)","",Statute, perl = T),
Statute)) %>%
mutate(Statute = ifelse(Zero_Consecutive_end == 1 & codes != 320 & is.na(Desc),
gsub("0{2}(?=\\w{1,4}$)","",Statute, perl = T),
Statute)) %>%
mutate(Statute = ifelse(Zero_Consecutive == 0 & Zero_Consecutive_end == 0 & is.na(Desc) & !codes %in%
c(316,320,322,784,790,796,806,810,812,893), gsub("0", "", Statute), Statute)) %>%
mutate(Statute = ifelse(codes == 316 & is.na(Desc) & grepl("0{1}(?=\\w{1,4}$)", Statute, perl = T),
gsub("0{1}(?=\\w{1,4}$)", "", Statute, perl = T),
Statute))%>%
mutate(Statute = ifelse(codes == 322 & is.na(Desc) & grepl("0{1}(?=\\w+\\D{1}$)", Statute, perl = T),
gsub("0{1}(?=\\w+\\D{1}$)", "", Statute, perl = T),
Statute)) %>%
mutate(Statute = ifelse(is.na(Desc) & is.na(ChargeType) & codes == 893,
str_remove(Statute,"C$|D$|F$|I$|J$|L$|M$|N$|T$|X$|Z$|A$|G$|B$|H$"),
Statute)) %>%
select(Statute, charge, codes, Statute_orginal)
Charges_Joined <- left_join(Charges_Joined, official_statues)
Charges_Joined <- Charges_Joined[-c(1:131),]
sum(is.na(Charges_Joined$Desc))
check <- Charges_Joined[is.na(Charges_Joined$Desc),]
Charges_Joined <- Charges_Joined %>%
mutate(Statute = ifelse(codes == 812 & is.na(Desc),gsub("0{1}(?=\\w{1,3}$)", "", Statute, perl = T),
Statute))%>%
select(Statute, charge, codes, Statute_orginal)
Charges_Joined <- left_join(Charges_Joined, official_statues)
sum(is.na(Charges_Joined$Desc)) #86 not bad
check <- Charges_Joined[is.na(Charges_Joined$Desc),]
Charges_Joined <- Charges_Joined %>%
mutate(Statute = ifelse(codes == 893 & is.na(Desc),gsub("\\D{1}$", "", Statute, perl = T),
Statute))%>%
select(Statute, charge, codes, Statute_orginal)
Charges_Joined <- left_join(Charges_Joined, official_statues)
sum(is.na(Charges_Joined$Desc)) #66 not bad
check <- Charges_Joined[is.na(Charges_Joined$Desc),]
Charges_Joined <- select(Charges_Joined, Statute, charge, codes, Statute_orginal)
#one more round of this
Charges_Joined[Charges_Joined$Statute == 11,1] <- "1010"
Charges_Joined[Charges_Joined$Statute == '2181A4',1] <- '2181A'
Charges_Joined[Charges_Joined$Statute == 787,1] <- 64
Charges_Joined[Charges_Joined$Statute == 316611,1] <- 3160611
Charges_Joined[Charges_Joined$Statute == '3161933ABC', 1] <- '3161933ABC1'
Charges_Joined[Charges_Joined$Statute == '3161923ABC', 1] <- '3161923ABC1'
Charges_Joined[Charges_Joined$Statute == 316631, 1] <- 3160631
Charges_Joined[Charges_Joined$Statute == 316723, 1] <- 3160723
Charges_Joined[Charges_Joined$Statute == 31681, 1] <- 316801
Charges_Joined[Charges_Joined$Statute == '3161933ABC', 1] <- '3161933ABC2'
Charges_Joined[Charges_Joined$Statute == 31661, 1] <- 316610
Charges_Joined[Charges_Joined$Statute == 31629541, 1] <- 3162954
Charges_Joined[Charges_Joined$Statute == 316882, 1] <- 3160882
Charges_Joined[Charges_Joined$Statute == 316723, 1] <- 3160723
Charges_Joined[Charges_Joined$Statute == '32007003C', 1] <- '320073C'
Charges_Joined[Charges_Joined$Statute ==  32013105, 1] <- 3201315
Charges_Joined[Charges_Joined$Statute ==  '32007003B', 1] <- '320073B'
Charges_Joined[Charges_Joined$Statute ==  '32026001A', 1] <- '320261A'
Charges_Joined[Charges_Joined$Statute ==  '32007003A', 1] <- '320073A'
Charges_Joined[Charges_Joined$Statute == 324211,1] <- 3242011
Charges_Joined[Charges_Joined$Statute == '434136C',1] <- '4034136C'
Charges_Joined[Charges_Joined$Statute == 434134,1] <- 4034134
Charges_Joined[Charges_Joined$Statute == 49931,1] <- 499031
Charges_Joined[Charges_Joined$Statute == 4995012,1] <- 49900512
Charges_Joined[Charges_Joined$Statute == '78404501A2',1] <- '7840451A2'
Charges_Joined[Charges_Joined$Statute == '78404501B',1] <- '7840451B'
Charges_Joined[Charges_Joined$Statute == '78402101A',1] <- '7840211A'
Charges_Joined[Charges_Joined$Statute == '7840210L',1] <- 784021
Charges_Joined[Charges_Joined$Statute == 78404802,1] <- 7840482
Charges_Joined[Charges_Joined$Statute == '78402101A1',1] <- '7840211A'
Charges_Joined[Charges_Joined$Statute == '78404501A1A',1] <- '7840451A1'
Charges_Joined[Charges_Joined$Statute == '78404501A',1] <- '7840451A'
Charges_Joined[Charges_Joined$Statute == '78402101A',1] <- '7840211A'
Charges_Joined[Charges_Joined$Statute == '7840450L',1] <- 784045
Charges_Joined[Charges_Joined$Statute == '78404102A',1] <- '7840412A'
Charges_Joined[Charges_Joined$Statute ==  795301,1] <- 7900531
Charges_Joined[Charges_Joined$Statute ==  79023301,1] <- 7902331
Charges_Joined[Charges_Joined$Statute ==  7901,1] <- 79010
Charges_Joined[Charges_Joined$Statute ==  '794114B',1] <- '7940114B'
Charges_Joined <- left_join(Charges_Joined, official_statues)
sum(is.na(Charges_Joined$Desc)) #28 not bad
check <- Charges_Joined[is.na(Charges_Joined$Desc),]
Charges_Joined[Charges_Joined$Statute ==  948611,1] <- 948061
Charges_Joined[Charges_Joined$Statute ==  948612,1] <- 948061
Charges_Joined[Charges_Joined$Statute ==  9444,1] <- 94440
Charges_Joined[Charges_Joined$Statute ==  943591,1] <- 9430591
Charges_Joined[Charges_Joined$Statute ==  89314704,1] <- 8931474
Charges_Joined[Charges_Joined$Statute ==  89314701,1] <- 8931471
Charges_Joined[Charges_Joined$Statute ==  '89313501',1] <- '8931351F'
Charges_Joined[Charges_Joined$Statute ==  '89313501A1',1] <- '8931351A1'
Charges_Joined[Charges_Joined$Statute ==  '89313501B1',1] <- '8931351B1'
Charges_Joined[Charges_Joined$Statute ==  '89313501B1',1] <- '8931351B1'
Charges_Joined[Charges_Joined$Statute ==  '89313501K2',1] <- '8931351K2'
Charges_Joined[Charges_Joined$Statute ==  '89313501K2',1] <- '8931351K2'
Charges_Joined[Charges_Joined$Statute ==  '89313501C1',1] <- '8931351C1C'
Charges_Joined[Charges_Joined$Statute ==   89314701,1] <- 8931471
Charges_Joined[Charges_Joined$Statute ==   '893136A2',1] <- '893136A'
Charges_Joined[Charges_Joined$Statute ==   '838211A',1] <- '8380211A'
Charges_Joined[Charges_Joined$Statute ==   '83102B',1] <- 83102
Charges_Joined[Charges_Joined$Statute ==   831322,1] <- 8310322
Charges_Joined[Charges_Joined$Statute ==   '812132BM',1] <- '812132B'
Charges_Joined[Charges_Joined$Statute ==   '782711A',1] <- '7820711A'
Charges_Joined[Charges_Joined$Statute ==   '782711A',1] <- '7820711A'
Charges_Joined[Charges_Joined$Statute ==   '777031C2A',1] <- '777032A'
Charges_Joined[Charges_Joined$Statute ==   '777031C2A',1] <- '777032A'
Charges_Joined <- Charges_Joined %>% select(Statute, charge, codes, Statute_orginal)
Charges_Joined <- left_join(Charges_Joined, official_statues)
sum(is.na(Charges_Joined$Desc)) #7 not bad
check <- Charges_Joined[is.na(Charges_Joined$Desc),]
Charges_Joined[Charges_Joined$Statute == 320216,1] <- 320261
Charges_Joined[Charges_Joined$Statute == 32203101,1] <- 3220311
Charges_Joined[Charges_Joined$Statute == '32231B',1] <- '322031B'
Charges_Joined[Charges_Joined$Statute == '322516A',1] <- '3220516A'
Charges_Joined <- Charges_Joined %>% select(Statute, charge, codes, Statute_orginal)
Charges_Joined <- left_join(Charges_Joined, official_statues)
sum(is.na(Charges_Joined$Desc))
check <- Charges_Joined[is.na(Charges_Joined$Desc),]
## cannot find the matching statutes in the official statutes for the following:
# BUSINESS W/O LIC
# LSC/INJURY/7-1-14
# LSC/INJURY/AT/7/1/14
rm(check)
Charges_Joined <- Charges_Joined %>%
distinct()
Charges <- Charges_Joined %>%
group_by(codes, Type) %>%
summarise(Category = paste(charge, collapse = ";"))
# create variable charge_count will tell how many charges each defendant has
books_fil <- books_fil %>%
mutate(id = row_number()) %>%
group_by(id) %>%
mutate(charge_count = sum(str_detect(Charge2,""), str_detect(Charge1,""), str_detect(Charge3, "")))
codes_322_fel <- unlist(str_split(Charges$Category[21], pattern = ";"))
codes_322_fel <- codes_322_fel[!duplicated(codes_322_fel)]
codes_322_notfel <- unlist(str_split(Charges$Category[22:26], pattern = ";"))
codes_322_notfel <- codes_322_notfel[!duplicated(codes_322_notfel)]
codes_322_all <- c(codes_322_fel, codes_322_notfel)
# Those with 322 or 324 codes either 1 and the rest are blank, 2 and the rest are blank, or all 3 have these codes. Some may be felonies, but they are all related to DWLS so I'll count them.
books_fil <- books_fil %>% mutate(DWLS_ONLY = case_when(
Charge1 %in% codes_322_all & Charge2 %in% codes_322_all & Charge3 %in% codes_322_all ~ 1,
Charge1 %in% codes_322_all & Charge2 %in% codes_322_all & Charge3 == "" ~ 1,
Charge1 %in% codes_322_all & Charge2 == "" & Charge3 == "" ~1,
Charge1 == "" & Charge2 %in% codes_322_all & Charge3 %in% codes_322_all ~1,
Charge1 == "" & Charge2 %in% codes_322_all & Charge3 == "" ~1,
Charge1 == "" & Charge2 == "" & Charge3 %in% codes_322_all ~1,
!Charge1 %in% codes_322_all | !Charge2 %in% codes_322_all | !Charge3 %in% codes_322_all ~0))
# DWLS - Felony charge
books_fil <- books_fil  %>% mutate(DWLS_FELONY = ifelse(Charge1 %in% codes_322_fel | Charge2 %in% codes_322_fel | Charge3 %in% codes_322_fel, 1,0))
other_charges <- c("BENCH WARRANT", "OUT-OF-CNTY/WARRANT", "ALIAS CAPIAS", "PROBATION WARRANT", "ARREST WARRANT", "WRIT/BODILY ATTACH", "PROBATION VIOLATION", "OUT ON FELONY BOND", "PRETRIAL REL/VIOLATE", "BOND SURRENDER","HOLD FOR MAGISTRATE", "OUT ON PROBATION", "CAPIAS", "WRIT OF ATTACHMENT")
books_fil <- books_fil %>% mutate(DWLS_HIGH = case_when(
Charge1 %in% codes_322_all & Charge2 %in% codes_322_all & Charge3 %in% codes_322_all ~ 1,
Charge1 %in% codes_322_all & Charge2 %in% codes_322_all & Charge3 == "" ~ 1,
Charge1 %in% codes_322_all & Charge2 == "" & Charge3 == "" ~1,
Charge1 == "" & Charge2 %in% codes_322_all & Charge3 %in% codes_322_all ~1,
Charge1 == "" & Charge2 %in% codes_322_all & Charge3 == "" ~1,
Charge1 == "" & Charge2 == "" & Charge3 %in% codes_322_all ~1,
Charge1 %in% codes_322_all & Charge2 %in% other_charges & Charge3 %in% other_charges~1,
Charge1 %in% codes_322_all & Charge2 %in% other_charges & Charge3 == "" ~1,
Charge1 %in% codes_322_all & Charge2 %in% other_charges & Charge3 %in% codes_322_all ~1,
Charge1 %in% codes_322_all & Charge2 %in% codes_322_all & Charge3 %in% other_charges ~1,
Charge1 %in% other_charges & Charge2 %in% codes_322_all & Charge3 %in% codes_322_all ~1,
Charge1 %in% other_charges & Charge2 %in% codes_322_all & Charge3 == "" ~1,
Charge1 %in% other_charges & Charge2 %in% other_charges & Charge3 %in% codes_322_all ~1,
Charge1 %in% other_charges & Charge2 %in% codes_322_all & Charge3 %in% other_charges ~1)) %>%
mutate(DWLS_HIGH = ifelse(is.na(DWLS_HIGH),0, DWLS_HIGH))
#316 felony charges
codes_316_fel <- unlist(str_split(Charges$Category[9], pattern = ";"))
codes_316_fel <- codes_316_fel[!duplicated(codes_316_fel)]
codes_316_fel <- c(codes_316_fel, "LSC/INJURY/7-1-14", "LSC/INJURY/AT/7/1/14")
#319 felony charges
codes_319_fel <- unlist(str_split(Charges$Category[16], pattern = ";"))
codes_319_fel <- codes_319_fel[!duplicated(codes_319_fel)]
#320 felony charges - there is only one
codes_320_fel <- unlist(str_split(Charges$Category[17], pattern = ";"))
codes_320_fel <- codes_320_fel[!duplicated(codes_320_fel)]
# 316 FELONY CHARGES:
print(codes_316_fel)
# 319 FELONY CHARGES:
print(codes_319_fel)
# 320 FELONY CHARGES:
print(codes_320_fel)
# All felony charges
driving_traffic_fel <- c(codes_316_fel, codes_319_fel, codes_320_fel)
# All driving/traffic felony charges
print(driving_traffic_fel)
# 316 infractions
codes_316_inf <- unlist(str_split(Charges$Category[10], pattern = ";"))
codes_316_inf <- codes_316_inf[!duplicated(codes_316_inf)]
# 320 infractions
codes_320_inf <- unlist(str_split(Charges$Category[18], pattern = ";"))
codes_320_inf <- codes_320_inf[!duplicated(codes_320_inf)]
# 316 INFRACTION CHARGES:
print(codes_316_inf)
# 320 Infraction charges
print(codes_320_inf)
# All infraction charges
driving_traffic_inf <- c(codes_316_inf, codes_320_inf)
# All driving/traffic infractions
print(driving_traffic_inf)
# 316 misdeamnors
codes_316_misd <- unlist(str_split(Charges$Category[11], pattern = ";"))
codes_316_misd <- codes_316_misd[!duplicated(codes_316_misd)]
# 318 misdeamnors
codes_318_misd <- unlist(str_split(Charges$Category[14], pattern = ";"))
codes_318_misd <- codes_318_misd[!duplicated(codes_318_misd)]
# 320 misdeamnors
codes_320_misd <- unlist(str_split(Charges$Category[19], pattern = ";"))
codes_320_misd <- codes_320_misd[!duplicated(codes_320_misd)]
# 316 misd
print(codes_316_misd)
# 318 misd
print(codes_318_misd)
# 320 misd
print(codes_320_misd)
# All driving/ traffic misd.
driving_traffic_misd <- c(codes_316_misd, codes_318_misd, codes_320_misd)
driving_traffic_misd <- driving_traffic_misd[!duplicated(driving_traffic_misd)]
# 316 traffic
codes_316_traff <- unlist(str_split(Charges$Category[12], pattern = ";"))
codes_316_traff <- codes_316_traff[!duplicated(codes_316_traff)]
# 318 traffic
codes_318_traff <- unlist(str_split(Charges$Category[15], pattern = ";"))
codes_318_traff <- codes_318_traff[!duplicated(codes_318_traff)]
# 320 traffic
codes_320_traff <- unlist(str_split(Charges$Category[20], pattern = ";"))
codes_320_traff <- codes_320_traff[!duplicated(codes_320_traff)]
# all driving/traffic traffic offenses
driving_traffic_traff <- c(codes_316_traff, codes_318_traff, codes_320_traff)
driving_traffic_traff <- driving_traffic_traff[!duplicated(driving_traffic_traff)]
# so we have driving_traffic_fel, which are all felony charges
# then we have driving_traffic_inf, driving_traffic_misd, driving_traffic_traff, which are minor offesnes - will collapse these three categories
driving_traffic_ns <- c(driving_traffic_inf, driving_traffic_misd, driving_traffic_traff)
driving_traffic_ns <- driving_traffic_ns[!duplicated(driving_traffic_ns)]
# all felony + ns
driving_traffic_all <- c(driving_traffic_fel, driving_traffic_ns)
rm(driving_traffic_inf, driving_traffic_misd, driving_traffic_traff)
print(driving_traffic_fel) #felonies
print(driving_traffic_ns) # infractions, misdeamnors, traffic
# create three groups -- Variable name (Serious_Driving_Traffic)
# (1) Serious_Driving_Traffic == "S", which corresponds to 316-320 felony charges (driving_traffic_fel)
# (2) Serious_Driving_Traffic == "NS", which corresponds to those that can be charged as misdemeanor, traffic, or infraction
# (driving_traffic_ns)
# (3) Serious_Driving_Traffic == "None", those who do not have any traffic charges
books_fil <- books_fil %>%
mutate(Serious_Driving_Traffic = case_when(
Charge1 %in% driving_traffic_fel & Charge2 %in% driving_traffic_fel & Charge3 %in% driving_traffic_fel ~  'S',
Charge1 %in% driving_traffic_fel & !Charge2 %in% driving_traffic_fel & !Charge3 %in% driving_traffic_fel ~ 'S',
Charge1 %in% driving_traffic_fel & !Charge2 %in% driving_traffic_fel & Charge3 %in% driving_traffic_fel ~ 'S',
Charge1 %in% driving_traffic_fel & Charge2 %in% driving_traffic_fel & !Charge3 %in% driving_traffic_fel ~ 'S',
!Charge1 %in% driving_traffic_fel & Charge2 %in% driving_traffic_fel & Charge3 %in% driving_traffic_fel ~  'S',
!Charge1 %in% driving_traffic_fel & Charge2 %in% driving_traffic_fel & !Charge3 %in% driving_traffic_fel ~ 'S',
!Charge1 %in% driving_traffic_fel & !Charge2 %in% driving_traffic_fel & Charge3 %in% driving_traffic_fel ~ 'S',
Charge1 %in% driving_traffic_ns & Charge2 %in% driving_traffic_ns & Charge3 %in% driving_traffic_ns ~ 'NS',
Charge1 %in% driving_traffic_ns & !Charge2 %in% driving_traffic_fel & !Charge3 %in% driving_traffic_fel ~ 'NS',
!Charge1 %in% driving_traffic_fel & Charge2 %in% driving_traffic_ns & !Charge3 %in% driving_traffic_fel ~ 'NS',
!Charge1 %in% driving_traffic_fel & !Charge2 %in%driving_traffic_fel & Charge3 %in% driving_traffic_ns ~ 'NS' ,
!Charge1 %in% driving_traffic_all & !Charge2 %in% driving_traffic_all & !Charge3 %in% driving_traffic_all ~ 'None'
))
# County Ordinance - C
# Municipal Ordinance - L
# Noncriminal - N
# county ordinances
county_ord <-unlist(str_split(Charges$Category[Charges$Type == "C"], pattern = ";"))
county_ord <- county_ord[!duplicated(county_ord)]
county_ord <- county_ord[!is.na(county_ord)]
# municipal ordinances
mun_ord <- unlist(str_split(Charges$Category[Charges$Type == "L"], pattern = ";"))
mun_ord <- mun_ord[!duplicated(mun_ord)]
mun_ord <- mun_ord[!is.na(mun_ord)]
# non criminal
noncrim <- unlist(str_split(Charges$Category[Charges$Type == "N"], pattern = ";"))
noncrim <- noncrim[!duplicated(noncrim)]
noncrim <- noncrim[!is.na(noncrim)]
minor_offenses <- c(county_ord, mun_ord, noncrim)
minor_offenses <- minor_offenses[!duplicated(minor_offenses)]
print(minor_offenses)
# Create minor offense dummy variable: Minor_Offense--will indicate whether one of the charges is a minor_offense
# Minor_offense == 1, one of the charges is a minor offense (municipal, county, or noncriminal)
# Minor_offense == 0, one of the charge is not a minor offense
books_fil <- books_fil %>%
group_by(id) %>%
mutate(minor_offense = ifelse(Charge1 %in% minor_offenses | Charge2 %in% minor_offenses | Charge3 %in%
minor_offenses,1,0))
View(Charges_Joined)
# major felonies
major_felonies <-unlist(str_split(Charges$Category[Charges$Type == "F"] & Charges$codes %in% c(403, 499, 775, 777, 782, 784, 787, 790, 794, 796, 806, 810, 812, 817, 827, 828, 831, 838, 843, 859, 893, 901, 914, 918, 934, 943, 944, 951), pattern = ";"))
Charges %>%
filter(Type == "F" & codes %in% c(403, 499, 775, 777, 782, 784, 787, 790, 794, 796, 806, 810, 812, 817, 827, 828, 831, 838, 843, 859, 893, 901, 914, 918, 934, 943, 944, 951)) %>%
unlist(str_split( ., pattern = ";"))
Felonies <- Charges %>%
filter(Type == "F" & codes %in% c(403, 499, 775, 777, 782, 784, 787, 790, 794, 796, 806, 810, 812, 817, 827, 828, 831, 838, 843, 859, 893, 901, 914, 918, 934, 943, 944, 951))
View(Felonies)
Felonies <- Charges %>%
filter(Type == "F" & codes %in% c(403, 499, 775, 777, 782, 784, 787, 790, 794, 796, 806, 810, 812, 817, 827, 828, 831, 838, 843, 859, 893, 901, 914, 918, 934, 943, 944, 951)) %>%
str_split(Category, pattern = ";"))
str_split(Felonies$Category, pattern = ";"))
str_split(Felonies$Category, pattern = ";")
major_felonies <- Charges %>%
filter(Type == "F" & codes %in% c(403, 499, 775, 777, 782, 784, 787, 790, 794, 796, 806, 810, 812, 817, 827, 828, 831, 838, 843, 859, 893, 901, 914, 918, 934, 943, 944, 951))
major_felonies<- unlist(str_split(Felonies$Category, pattern = ";"))
major_felonies <- major_felonies[!duplicated(major_felonies)]
major_felonies
print(major_felonies)
books_fil <- books_fil %>%
group_by(id) %>%
mutate(major_felony = ifelse(Charge1 %in% major_felonies | Charge2 %in% major_felonies | Charge3 %in%
major_felonies,1,0))
View(books_fil)
names(books_fil)
codes_322_all
rm(list=ls())
library(RSocrata)
df <- read.socrata(
"https://opendata.miamidade.gov/resource/k7xd-qgzt.json",
app_token = "efU2lARQusTmRE4132NkRlSWN",
email     = "madisonvolpe1@gmail.com",
password  = "Honda1195!"
)
library(RSocrata)
df <- read.socrata(
"https://opendata.miamidade.gov/resource/k7xd-qgzt.json",
app_token = "efU2lARQusTmRE4132NkRlSWN",
email     = "madisonvolpe1@gmail.com",
password  = "Florse95"
)
earthquakesDataFrame <- read.socrata("https://opendata.miamidade.gov/resource/k7xd-qgzt.json", app_token = "efU2lARQusTmRE4132NkRlSWN")
library(RSocrata)
token <- "efU2lARQusTmRE4132NkRlSWN"
df <- read.socrata("https://opendata.miamidade.gov/resource/k7xd-qgzt.json",
app_token = "efU2lARQusTmRE4132NkRlSWN")
rm(earthquakesDataFrame)
View(df)
View(df)
rm(list=ls())
install.packages("Rserve")
library(Rserve)
Rserve()
?Rserve
Rserve("--no-save")
Rserve("save")
Rserve(args="--no-save"
Rserve(args="--no-save")
rm(list=ls())
install.packages("mvoutlier")
library(mvoutlier)
library(Rserve)
Rserve::Rserve()
Rserve::Rserve("args = "--no-save)
Rserve::Rserve("args = "--no-save"")
Rserve::Rserve("args = "--no-save")
Rserve::Rserve(args = "--no-save")
Rserve::Rserve(args = "--no-save")
library(ggmap)
Rserve::Rserve(args="--no-save")
Rserve::Rserve(args="--no-save")
rm(list=ls())
library(RSocrata)
### read API ###
token <- kQZdHWZoaGCuyRTdOGcpm9hqs
fdny_data <- read.socrata("https://data.cityofnewyork.us/resource/ibte-hq4u.json", api_token = token)
library(RSocrata)
### read API ###
token <- kQZdHWZoaGCuyRTdOGcpm9hqs
fdny_data <- read.socrata("https://data.cityofnewyork.us/resource/ibte-hq4u.json", app_token = token)
token <- kQZdHWZoaGCuyRTdOGcpm9hqs
library(RSocrata)
### read API ###
token <- "kQZdHWZoaGCuyRTdOGcpm9hqs"
fdny_data <- read.socrata("https://data.cityofnewyork.us/resource/ibte-hq4u.json", app_token = token)
library(RSocrata)
### read API ###
token <- "kQZdHWZoaGCuyRTdOGcpm9hqs"
fdny_data <- read.socrata("https://data.cityofnewyork.us/resource/ibte-hq4u.json", app_token = token)
fdny_data <- read.socrata("https://data.cityofnewyork.us/resource/ibte-hq4u.csv")
str(fdny_data)
unique(fdny_data$incident_type_desc)
filter(fdny_data, incident_type_desc == "111 - Building fire")
library(tidyverse)
filter(fdny_data, incident_type_desc == "111 - Building fire")
## Filter data for building fires ##
building_fires <- filter(fdny_data, incident_type_desc == "111 - Building fire")
View(building_fires)
rm(list=ls())
library(RSocrata)
library(tidyverse)
##### Bureau of Fire Prevention - Building Summary #####
## Reading “human-readable” URLs ##
fdny_building <- read.socrata("https://data.cityofnewyork.us/resource/5tmn-jyji.csv")
str(fdny_building)
rm(list=ls())
library(RSocrata)
library(tidyverse)
##### Bureau of Fire Prevention - Building Summary #####
## Reading “human-readable” URLs ##
fdny_building <- read.socrata("https://data.cityofnewyork.us/resource/5tmn-jyji.csv")
## Filter data for building fires ##
building_fires <- filter(fdny_data, incident_type_desc == "111 - Building fire")
str(fdny_building)
View(fdny_building)
unique(fdny_building$BOROUGH)
rm(list=ls())
library(RSocrata)
library(tidyverse)
##### Bureau of Fire Prevention - Active Violation Orders #####
## Reading “human-readable” URLs ##
fdny_building <- read.socrata("https://data.cityofnewyork.us/resource/ji4k-e2qr.csv")
View(fdny_building)
library(RSocrata)
library(tidyverse)
##### Bureau of Fire Prevention - Active Violation Orders #####
## Reading “human-readable” URLs ##
fdny_building <- read.socrata("https://data.cityofnewyork.us/resource/ji4k-e2qr.csv")
View(fdny_building)
length(unique(fdny_building$vio_law_desc))
rm(list=ls())
package_version(Rserve)
package_version("Rserve")
Rserve::Rserve(args="--no-save")
Rserve::Rserve(args="--no-save")
packageVersion("Rserve")
install.packages("Rserve","Rserve_1.8-6.tgz","http://www.rforge.net/")
install.packages("Rserve","Rserve_1.8-6.tgz","http://www.rforge.net/")
install.packages("Rserve","Rserve_1.8-6.tgz","http://www.rforge.net/")
install.packages("Rserve","Rserve_1.8-6.tgz","http://www.rforge.net/")
packageVersion("Rserve")
library(Rserve)
Rserve::Rserve()
Rserve::Rserve("--no-save")
Rserve::Rserve(args ="--no-save")
?scale
getwd()
.257+1
-.257
1.257 - .257
library(Rserve)
Rserve::Rserve("--no-save")
Rserve::Rserve("")
Rserve::Rserve()
Rserve::Rserve("args=--no-save")
Rserve::Rserve(args="--no-save")
getwd()
shp <- rgdal::readOGR(dsn = "/Users/madisonvolp/Desktop",layer = "NYC_Sub_borough_Area.shp")
shp <- rgdal::readOGR(dsn = "/Users/madisonvolp/Desktop",layer = "NYC_Sub_borough_Area")
shp <- rgdal::readOGR(dsn = "/Users/madisonvolp/Desktop/NYC_Sub_borough_Area.shp")
getwd()
shp <- rgdal::readOGR(dsn = "/Users/madisonvolpe/Documents/Grad_School/Spring_2019/EDSP_Final/data/nyc_sub_borough_area")
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(library(raster))
suppressPackageStartupMessages(library(survey))
suppressPackageStartupMessages(library(plyr))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(sf)) # for shapefiles
suppressPackageStartupMessages(library(maptools))
suppressPackageStartupMessages(library(rgdal))
suppressPackageStartupMessages(library(rgeos))
suppressPackageStartupMessages(library(reshape2))
suppressPackageStartupMessages(library(kableExtra))
suppressPackageStartupMessages(library(gridExtra))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(geosphere))
# read in shapefile
shp <- rgdal::readOGR(dsn = "data/nyc_sub_borough_area")
getwd()
getwd()
rm(list=ls())
rm(list=ls())
rm(list=ls())
?Rserve
?Rserve
library(Rserve)
?Rserve
Rserve::Rserve(args = '--no-save')
rm(list=ls())
getwd()
setwd(] "/Users/madisonvolpe/Documents/r_ladies/r_ladies_pres/datasets")
setwd("/Users/madisonvolpe/Documents/r_ladies/r_ladies_pres/datasets")
getwd()
rm(list=ls())
dat <- read.csv("drug_arrest_coordinates.csv")
View(dat)
library(dbscan)
?dbscan
apply(dat,2, function(x) sum(is.na(x)))
sum(is.na(dat))
dat2 <- cbind(dat$x, dat$y)
dbscan(dat2, eps = 0.01, minPts = 20)
dbscan(dat2, eps = 0.001, minPts = 50)
dbscan(dat2, eps = 0.001, minPts = 20)
dbscan(dat2, eps = 0.001, minPts = 100)
dbscan(dat2, eps = 0.001, minPts = 200)
